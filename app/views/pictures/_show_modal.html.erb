<div class="swiper-container">
  <ul class="swiper-wrapper">

    <% if @prev_picture.present? %>
      <li id="prev_picture" class="swiper-slide">
        <%= render 'show_modal_picture_area', picture: @prev_picture, number: 0 %>
      </li>
    <% end -%>

    <li id="current_picture" class="swiper-slide">
      <%= render 'show_modal_picture_area', picture: @picture, number: 1 %>
    </li>

    <% if @next_picture.present? %>
      <li id="next_picture" class="swiper-slide">
        <%= render 'show_modal_picture_area', picture: @next_picture, number: 2 %>
      </li>
    <% end -%>

  </ul>

  <div class="swiper-button-next"></div>
  <div class="swiper-button-prev"></div>
</div>

<div style="display:none;">
  <span id="prev_id">0</span>
  <span id="next_id">0</span>
</div>

<script>
  var swiper = new Swiper('.swiper-container', {
    <% if @prev_picture.blank? %>
      initialSlide: 0,
    <% else %>
      initialSlide: 1,
    <% end -%>
    observer: true,
    observeParents: true,
    autoHeight: true,
    preventIntercationOnTransition: true,
    keyboard: {
      enabled: true,
      onlyInViewport: false,
    },
    navigation: {
      nextEl: '.swiper-button-next',
      prevEl: '.swiper-button-prev',
    },
  });

  <%# swiperが移動終了した時のイベント %>
  swiper.on('slideChangeTransitionEnd', function() {
    <%# swiperが移動した後、画像の大きさにwindowを合わせる為にupdateする %>
    swiper.update();

    if(swiper.isBeginning) {
      prev = $("#prev_id").text();
      if(prev != "") {
        $.ajax({
          url: "/pictures/prev_add",
          type: "get",
          data: {prev: prev},
          dataType: "script",
          success: function(data) {
            swiper.allowSlidePrev = false;
            $('.swiper-button-prev').removeClass('swiper-button-prev').addClass('ajax_loading_left');
            setTimeout(function(){
              swiper.allowSlidePrev = true;
              swiper.update();
              $('.ajax_loading_left').removeClass('ajax_loading_left').addClass('swiper-button-prev');
            },1000);
          },
          error: function(data) {
          }
        });
      }
    }

    if(swiper.isEnd) {
      next = $("#next_id").text();
      if(next != "") {
        $.ajax({
          url: "/pictures/next_add",
          type: "get",
          data: {next: next},
          dataType: "script",
          success: function(data) {
            swiper.allowSlideNext = false;
            $('.swiper-button-next').removeClass('swiper-button-next').addClass('ajax_loading_right');
            setTimeout(function(){
              swiper.allowSlideNext = true;
              swiper.update();
              $('.ajax_loading_right').removeClass('ajax_loading_right').addClass('swiper-button-next');
            },1000);
          },
          error: function(data) {
          }
        });
      } 
    }
  });

  <%# swiper移動時のイベント %>
  // swiper.on('reachBeginning', function() {
  //   console.log("prev");

  // });

  // swiper.on('reachEnd', function() {

  // });
</script>